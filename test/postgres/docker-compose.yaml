version: '3.8'

services:
  postgres:
    image: bitnami/postgresql:15.1.0
    volumes:
      - 'test_postgresql_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=postgres
      - POSTGRESQL_DATABASE=test
      - POSTGRESQL_USERNAME=test
      - POSTGRESQL_PASSWORD=test
    ports:
      - "5432:5432"
    labels:
      - bdv2s3.postgres-backup
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432", "-U", "test"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
  heartbeat-server:
    image: nginx:1.23.3
    ports:
      - "8080:80"
  backup:
    build:
      context: ../..
      dockerfile: Dockerfile
    volumes:
      - 'test_postgresql_data:/backup/test_postgresql_data:ro'
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_KEY_PREFIX=${AWS_S3_KEY_PREFIX}
      - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL}
      - HEARTBEAT_URL=http://heartbeat-server?heartbeat
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - BACKUP_CRON_EXPRESSION=${BACKUP_CRON_EXPRESSION}
      - STOP_CONTAINERS_LABEL=bdv2s3.postgres-backup
    healthcheck:
      test: ["CMD", "ls", "/backup/test_postgresql_data"]
      interval: 1s
      timeout: 1s
      retries: 5
      start_period: 1s
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  test_postgresql_data:
    name: test_postgresql_data
    driver: local
