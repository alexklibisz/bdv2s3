name: "CI"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  show-github-context:
    timeout-minutes: 1
    runs-on: ubuntu-22.04
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - run: echo $GITHUB_CONTEXT

  test-postgres:
    runs-on: ubuntu-22.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_S3_KEY_PREFIX: test/happy-path/containers-${{ github.run_number }}
    steps:
      - name: Checkout
        timeout-minutes: 1
        uses: actions/checkout@v2
      - name: Install Docker Compose
        timeout-minutes: 1
        run: |
          sudo apt -qq install -y docker-compose
          docker-compose --version
      - name: Install Postgres Client
        timeout-minutes: 1
        run: |
          sudo apt -qq install -y postgresql-client
          psql --version
      - name: Install AWS CLI
        timeout-minutes: 1
        run: |
          sudo apt -qq install -y awscli
          aws --version
      - name: Start Containers
        timeout-minutes: 1
        working-directory: test/postgres
        run: docker-compose up -d --build
      - name: Insert Data
        timeout-minutes: 1
        working-directory: test/postgres
        run: |
          echo "..."
      - name: Run Backup
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
        run: |
          cd test/postgres
          docker-compose exec -T backup /bin/sh /backup.sh
      - name: Stop Containers
        working-directory: test/postgres
        run: |
          docker-compose down --volumes
      - name: Restore Backup
        run: |
          echo "..."
      - name: Validate Backup
        run: |
          echo "..."
      # - name: Check Backups
      #   run: |
      #     aws s3 cp s3://$AWS_S3_BUCKET . --recursive --exclude "*" --include "$AWS_S3_KEY_PREFIX-*"
      #     find . -name '*.tar.gz' | grep $AWS_S3_KEY_PREFIX | xargs md5sum
      #     find . -name '*.tar.gz' | grep $AWS_S3_KEY_PREFIX | xargs cmp --silent $1 /backup.tar.gz
